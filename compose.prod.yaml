services:
  lunchrota:
    image: ghcr.io/andy3471/lunchrota:latest
    restart: unless-stopped
    volumes:
      - ./lunchrota/storage:/var/www/storage
    env_file: .env
    networks:
      - lunchrota
      - traefik
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lunchrota-demo.rule=Host(`lunchrota.andyh.app`)"
      - "traefik.http.routers.lunchrota-demo.entrypoints=websecure"
      - "traefik.http.routers.lunchrota-demo.tls=true"
      - "traefik.http.routers.lunchrota-demo.tls.certresolver=le"
      - "traefik.http.services.lunchrota-demo.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik"

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE:-app}
      - POSTGRES_USER=${DB_USERNAME:-laravel}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - lunchrota
      - traefik
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - lunchrota
      - traefik
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  lunchrota:
  traefik:
    external: true

